@page  "/Estudiantes/{CurrentId:int}"

<h3>Estudiante</h3>
<div class="container">
    <h5>@mensaje</h5>
    <div class="row">
        <div class="col-md-10">
            <EditForm Model="estudiantes" OnValidSubmit="Guardar">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <div class="form-group">
                    <label for="EstudianteId">EstudianteId</label>
                    <InputNumber @bind-Value="estudiantes.EstudianteId" class="form-control"></InputNumber>
                    <ValidationMessage For="(()=>estudiantes.EstudianteId)"></ValidationMessage>
                </div>

                <div class="form-group">
                    <label for="NombreEstudiante">Nombre</label>
                    <InputText @bind-Value="estudiantes.NombreEstudiante" class="form-control"></InputText>
                    <ValidationMessage For="(()=>estudiantes.NombreEstudiante)"></ValidationMessage>
                </div>


                <div class="form-row form-group">
                    <div class="col">
                        <label for="AsignaturaId">AsignaturaId</label>
                        <InputNumber @bind-Value="AsignaturaId"></InputNumber>
                    </div>
                  
                    <div>
                        <label>
                            AsignaturaId
                            <InputSelect @bind-Value="AsignaturaNombre">
                                <option>Materias</option>
                                @foreach (var item in AsignaturasDetalle)
                                  {
                                    <option>@item.Descripcion</option>
                                }
                                <option value="Matematicas">Matematicas</option>
                                <option value="Aplicada">Aplicada</option>
                            </InputSelect>
                        </label>
                    </div>
                   
                   

                    <div class="col">
                        <label for="Creditos">Creditos</label>
                        <InputNumber @bind-Value="Creditos" placeholder="Creditos"></InputNumber>
                    </div>
             
                </div>

                <div class="form-row form-group">

                    <div class="col">
                        <label for="Prerrequisitos">Prerrequisitos</label>
                        <InputText @bind-Value="Prerrequisitos"></InputText>
                    </div>

                    <div class="col">
                        <label for="EstudianteId">EstudianteId</label>
                        <InputNumber @bind-Value="EstudianteId" class="form-control"></InputNumber>
                    </div>

                    <div class="col">
                        <label for="Codigo">Codigo</label>
                        <InputText @bind-Value="Codigo" class="form-control"></InputText>
                    </div>

                </div>


                <button type="button" class="btn btn-outline-success" @onclick="BuscarAsignaturas">Buscar Asignatura</button>

                <button type="button" @onclick="CargarGrid" class="btn btn-outline-primary">Agregar asignatura</button>

                <button type="button" @onclick="LimpiarCampos" class="btn btn-outline-dark">Limpiar campos</button>
                <br />

                <table class="table">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Creditos</th>
                            <th>PreRequisitos</th>
                            <th>EstudianteId</th>
                            <th>Codigo</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in AsignaturasDetalle)
                        {
                            <tr>
                                <td>@item.AsignaturaId.</td>
                                <td>@item.Creditos</td>
                                <td>@item.PreRequisitos</td>
                                <td>@item.EstudianteId</td>
                                <td>@item.Codigo</td>
                            </tr>
                        }
                    </tbody>

                </table>



                <div class="form-group">
                    <label for="Matricula">Matricula</label>
                    <InputNumber @bind-Value="estudiantes.Matricula" class="form-control"></InputNumber>
                </div>

                <div class="form-group">
                    <label for="Balance">Balance</label>
                    <InputNumber @bind-Value="estudiantes.Balance" class="form-control"></InputNumber>
                    <ValidationMessage For="(()=>estudiantes.Balance)"></ValidationMessage>
                </div>



                <button type="button" class="btn btn-info" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-primary">Guardar</button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>

            </EditForm>
        </div>

        <div class="col">
            <button type="button" class="btn btn-success" @onclick="Buscar">Buscar</button>
        </div>

    </div>
</div>


@code {

    Estudiantes estudiantes = new Estudiantes();
    List<Asignaturas> AsignaturasDetalle = new List<Asignaturas>();
    EstudiantesControllers EstudiantesControllers = new EstudiantesControllers();
    AsignaturasControllers AsignaturasControllers = new AsignaturasControllers();
    private string AsignaturaNombre { get; set; }
    private string Descripcion { get; set; }
    private string mensaje;
    private string Prerrequisitos { get; set; }
    Asignaturas asignaturas = new Asignaturas();
    private int Creditos { get; set; }
    public int AsignaturaId { get; set; }
    private int EstudianteId { get; set; }
    private string Codigo { get; set; }


    [Parameter]
    public int CurrentId { get; set; }

    protected override void OnInitialized()
    {
        if(CurrentId!=0)
        {
            estudiantes = EstudiantesControllers.Buscar(CurrentId);
        }
    }


    private void Guardar()
    {
        LlevarGrid();

        if (EstudiantesControllers.Insertar(estudiantes))
        {
            mensaje = "Guardado";
            this.estudiantes = new Estudiantes();
        }
        else
        {
            mensaje = "No se pudo guardar";
        }

    }



    private void Nuevo()
    {
        this.estudiantes = new Estudiantes();
    }

    private void Eliminar()
    {
        bool paso = EstudiantesControllers.Eliminar(estudiantes.EstudianteId);
        if (paso == false)
        {
            mensaje = "No existe la inscripcion";
        }
        else
        {
            mensaje = "Eliminado correctamente";
            this.estudiantes = new Estudiantes();
        }
    }

    private void Buscar()
    {
        Estudiantes busca = EstudiantesControllers.Buscar(estudiantes.EstudianteId);
        if (busca != null)
        {
            this.estudiantes = busca;
            this.AsignaturasDetalle = AsignaturasControllers.GetList(p => p.EstudianteId == estudiantes.EstudianteId);
            LlevarGrid();
            mensaje = "Encontrado correctamente";
        }
        else
        {
            mensaje = "No se pudo encontrar";
            this.estudiantes = new Estudiantes();
        }
    }

    private void CargarGrid()
    {

        this.AsignaturasDetalle.Add(
            new Asignaturas(
               asignaturas.AsignaturaId = AsignaturaId,
               asignaturas.Codigo = Codigo,
               asignaturas.Descripcion = AsignaturaNombre,
               asignaturas.PreRequisitos = Prerrequisitos,
               asignaturas.Creditos = Creditos,
               asignaturas.EstudianteId = EstudianteId
                ));

    }

    private void LlevarGrid()
    {
        this.estudiantes.Asignaturas = null;
        this.estudiantes.Asignaturas = AsignaturasDetalle;
    }


    private void BuscarAsignaturas()
    {

        Asignaturas busca = AsignaturasControllers.BuscarAsignaturas(AsignaturaId);

        if(busca!=null)
        {
            AsignaturaId = busca.AsignaturaId;
            Codigo = busca.Codigo;
            AsignaturaNombre = busca.Descripcion;
            Prerrequisitos = busca.PreRequisitos;
            Creditos = busca.Creditos;
            EstudianteId = busca.EstudianteId;
            CargarGrid();
        } else
        {
            mensaje = "No se pudo buscar la asignaura";
        }
       
    }


    private void LimpiarCampos()
    {
        AsignaturaId = 0;
        Codigo = string.Empty;
        Descripcion = string.Empty;
        Prerrequisitos = string.Empty;
        Creditos = 0;
        EstudianteId = 0;

    }

}
